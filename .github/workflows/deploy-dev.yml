name: Deploy App (dev)

on:
  push:
    branches:
      - dev

env:
  AZURE_WEBAPP_PATH: './DotnetCD'
  DOTNET_VERSION: '5.0.x'

  # For Terraform's azurerm provider
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  setup-infra:
    runs-on: ubuntu-latest
    outputs: 
      app_service_name: ${{ steps.app_service_name.outputs.lowercase }}
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Workspace Select
        run: terraform workspace select dev || terraform workspace new dev
      
      - name: Terraform Apply
        run: terraform apply --auto-approve

      - id: app_service_name
        uses: ASzc/change-string-case-action@v1
        with:
            string: $(terraform output app_service_name)
        
  build-and-deploy:
    needs: setup-infra
    runs-on: windows-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Dependencies
        run: dotnet restore
        
      - name: Test
        run: dotnet test --no-restore

      - name: Publish
        run: dotnet publish -c Release --no-restore -o '${{ env.AZURE_WEBAPP_PATH }}'

      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: '${{ needs.setup-infra.outputs.app_service_name }}'
          package: '${{ env.AZURE_WEBAPP_PATH }}'
      
      - name: Azure Logout
        run: az logout