name: Deploy App (dev)

on:
  push:
    branches:
      - dev

env:
  AZURE_WEBAPP_PATH: './DotnetCD'
  DOTNET_VERSION: '5.0.x'

jobs:
  setup-infra:
    runs-on: ubuntu-latest
    outputs: 
      pet_name: ${{ steps.pet_name_output.outputs.pet_name }}
      uuid: ${{ steps.uuid_output.outputs.uuid }}
    steps:
      - uses: hashicorp/setup-terraform@v1
      - uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Apply
        run: terraform apply --auto-approve
        
      - id: pet_name_output
        run: echo "::set-output name=pet_name::$(terraform output o_pet_name)"
        
      - id: uuid_output
        run: echo "::set-output name=uuid::$(terraform output o_uuid)"
        
# Use azurerm provider and perform terraform login to Azure
        
  build-and-deploy:
    needs: setup-infra
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
          
      - name: setup-infra Result
        run: echo "${{ needs.setup-infra.outputs.pet_name }} ${{ needs.setup-infra.outputs.uuid }}"

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Dependencies
        run: dotnet restore
        
      - name: Test
        run: dotnet test --no-restore

      - name: Publish
        run: dotnet publish -c Release --no-restore -o '${{ env.AZURE_WEBAPP_PATH }}'

      - name: 'Deploy'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME_DEV }}
          publish-profile: ${{ secrets.PUBLISH_PROFILE_DEV }}
          package: ${{ env.AZURE_WEBAPP_PATH }}
